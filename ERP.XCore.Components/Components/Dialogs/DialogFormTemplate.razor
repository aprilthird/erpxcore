<MudDialog @bind-IsVisible="IsShowing" Options="new DialogOptions { MaxWidth = MaxWidth, FullWidth = FullWidth }">
    <TitleContent>
        <MudText Typo="Typo.h6">@Title</MudText>
    </TitleContent>
    <DialogContent>
        @ChildContent
    </DialogContent>
    <DialogActions>
        <MudStack Row="true" Class="pb-2 pe-4">
            @if (string.IsNullOrEmpty(SecondaryButtonText))
            {
                <ButtonLoader Text="@PrimaryButtonText" LoadingText="@PrimaryButtonLoadingText" Icon="@PrimaryButtonIcon" OnClickCallback="SubmitAsync" />
            }
            else
            {
                <MudButton Variant="Variant.Filled" OnClick="Close" StartIcon="@Icons.Material.Filled.Close">@SecondaryButtonText</MudButton>
                <ButtonLoader Text="@PrimaryButtonText" LoadingText="@PrimaryButtonLoadingText" Icon="@PrimaryButtonIcon" OnClickCallback="SubmitAsync" />
            }
        </MudStack>
    </DialogActions>
</MudDialog>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public MaxWidth? MaxWidth { get; set; } = MudBlazor.MaxWidth.ExtraSmall;

    [Parameter]
    public bool FullWidth { get; set; } = true;

    [Parameter]
    public string? PrimaryButtonText { get; set; }

    [Parameter]
    public string? PrimaryButtonLoadingText { get; set; }

    [Parameter]
    public string? PrimaryButtonIcon { get; set; }

    [Parameter]
    public string? SecondaryButtonText { get; set; }

    [Parameter]
    public EventCallback OnSubmitCallback { get; set; }

    private bool IsShowing = false;

    private async Task SubmitAsync()
    {
        await OnSubmitCallback.InvokeAsync(this);
        IsShowing = false;
    }

    public void Open() => IsShowing = true;

    public void Close() => IsShowing = false;
}
