<DialogFormTemplate @ref="DialogFormTemplate" Title="@Title" MaxWidth="MaxWidth" FullWidth="FullWidth" PrimaryButtonText="@PrimaryButtonText" PrimaryButtonLoadingText="@PrimaryButtonLoadingText" PrimaryButtonIcon="@PrimaryButtonIcon" SecondaryButtonText="@SecondaryButtonText" OnSubmitCallback="SubmitAsync">
    <MudForm @ref="Form" Model="Model">
        @ChildContent
    </MudForm>
</DialogFormTemplate>

@code {
    [Inject]
    ISnackbar Snackbar { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public object Model { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public MaxWidth? MaxWidth { get; set; } = MudBlazor.MaxWidth.Small;

    [Parameter]
    public bool FullWidth { get; set; } = true;

    [Parameter]
    public string? PrimaryButtonText { get; set; } = Constants.Dialog.SAVE_BUTTON_TEXT;

    [Parameter]
    public string? PrimaryButtonLoadingText { get; set; } = Constants.Dialog.SAVING_BUTTON_TEXT;

    [Parameter]
    public string? PrimaryButtonIcon { get; set; } = Icons.Material.Filled.Save;

    [Parameter]
    public string? SecondaryButtonText { get; set; } = Constants.Dialog.CANCEL_BUTTON_TEXT;

    [Parameter]
    public EventCallback ValidSubmitCallback { get; set; }

    [Parameter]
    public EventCallback InvalidSubmitCallback { get; set; }

    private DialogFormTemplate DialogFormTemplate;
    private MudForm Form;

    private async Task SubmitAsync()
    {
        await Form.Validate();
        if (Form.IsValid)
        {
            Snackbar.Add("Cambios Realizados", Severity.Success);
            await ValidSubmitCallback.InvokeAsync(this);
            DialogFormTemplate.Close();
        }
        else
        {
            Snackbar.Add("!Ocurrió un error!", Severity.Error);
            await InvalidSubmitCallback.InvokeAsync(this);
        }
    }

    public void Open() => DialogFormTemplate.Open();

    public void Close() => DialogFormTemplate.Close();
}
