@using Layout._Helpers
@inject IJSRuntime JS

<!--begin::Logo-->
<div class="app-sidebar-logo px-6" id="kt_app_sidebar_logo">
	<!--begin::Logo image-->  
	<a href="?page=index">
		@if(sidebar=="dark-sidebar"){
			<img alt="Logo" src="assets/media/logos/default-dark.svg" class="h-25px app-sidebar-logo-default" />
		} else {
			if(sidebar=="light-sidebar"){
				<img alt="Logo" src="assets/media/logos/default.svg" class="theme-light-show h-25px app-sidebar-logo-default" />
				<img alt="Logo" src="assets/media/logos/default-dark.svg" class="theme-dark-show h-25px app-sidebar-logo-default" />
			}
		}
		<img alt="Logo" src="assets/media/logos/default-small.svg" class="h-20px app-sidebar-logo-minimize" />
	</a>
	<!--end::Logo image-->

	<!--begin::Sidebar toggle-->
	<div id="kt_app_sidebar_toggle" class="app-sidebar-toggle btn btn-icon btn-shadow btn-sm btn-color-muted btn-active-color-primary body-bg h-30px w-30px position-absolute top-50 start-100 translate-middle rotate" data-kt-toggle="true" data-kt-toggle-state="active" data-kt-toggle-target="body" data-kt-toggle-name="app-sidebar-minimize">
		@((MarkupString)KTTheme.getSvgIcon("assets/media/icons/duotune/arrows/arr079.svg", "svg-icon svg-icon-2 rotate-180"))
	</div>
	<!--end::Sidebar toggle-->
</div>
<!--end::Logo-->

@code {
	private string sidebar;
	
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if(firstRender)
		{
			sidebar = await JS.InvokeAsync<string>("document.body.getAttribute", "data-kt-app-layout");
			StateHasChanged();
		}
	}
}